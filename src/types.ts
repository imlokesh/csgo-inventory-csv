// Generated by https://quicktype.io
//
// To change quicktype's target language, run command:
//
//   "Set quicktype target language"

export interface Inventory {
  assets: Asset[];
  descriptions: InventoryDescription[];
  total_inventory_count: number;
  success: number;
  rwgrsn: number;
}

export interface Asset {
  appid: number;
  contextid: string;
  assetid: string;
  classid: string;
  instanceid: string;
  amount: string;
}

export interface InventoryDescription {
  appid: number;
  classid: string;
  instanceid: string;
  currency: number;
  background_color: string;
  icon_url: string;
  icon_url_large?: string;
  descriptions: DescriptionDescription[];
  tradable: number;
  actions?: Action[];
  name: string;
  name_color: NameColorEnum;
  type: string;
  market_name: string;
  market_hash_name: string;
  market_actions?: Action[];
  commodity: number;
  market_tradable_restriction: number;
  marketable: number;
  tags: Tag[];
  market_buy_country_restriction?: string;
}

export interface Action {
  link: string;
  name: Name;
}

export enum Name {
  InspectInGame = "Inspect in Game...",
}

export interface DescriptionDescription {
  type: Type;
  value: string;
  color?: PurpleColor;
}

export enum PurpleColor {
  Cf6A32 = "CF6A32",
  D32Ce6 = "d32ce6",
  Eb4B4B = "eb4b4b",
  Ff4040 = "ff4040",
  Ffd700 = "ffd700",
  The00A000 = "00a000",
  The4B69Ff = "4b69ff",
  The8847Ff = "8847ff",
  The99Ccff = "99ccff",
  The9Da1A9 = "9da1a9",
}

export enum Type {
  HTML = "html",
}

export enum NameColorEnum {
  B0C3D9 = "b0c3d9",
  Cf6A32 = "CF6A32",
  D2D2D2 = "D2D2D2",
  D32Ce6 = "d32ce6",
  Eb4B4B = "eb4b4b",
  Ffd700 = "FFD700",
  The4B69Ff = "4b69ff",
  The5E98D9 = "5e98d9",
  The8650AC = "8650AC",
  The8847Ff = "8847ff",
}

export interface Tag {
  category: Category;
  internal_name: string;
  localized_category_name: LocalizedCategoryName;
  localized_tag_name: string;
  color?: NameColorEnum;
}

export enum Category {
  Exterior = "Exterior",
  ItemSet = "ItemSet",
  ProPlayer = "ProPlayer",
  Quality = "Quality",
  Rarity = "Rarity",
  SprayColorCategory = "SprayColorCategory",
  Tournament = "Tournament",
  TournamentTeam = "TournamentTeam",
  Type = "Type",
  Weapon = "Weapon",
}

export enum LocalizedCategoryName {
  Category = "Category",
  Collection = "Collection",
  Exterior = "Exterior",
  GraffitiColor = "Graffiti Color",
  ProfessionalPlayer = "Professional Player",
  Quality = "Quality",
  Team = "Team",
  Tournament = "Tournament",
  Type = "Type",
  Weapon = "Weapon",
}

export interface ParsedItem {
  Type: string;
  MarketName: string;
  MarketHashName: string;
  Marketable: string;
  Exterior: string;
  ItemSet: string;
  Quality: string;
  Rarity: string;
  Weapon: string;
  AveragePrice: string;
  MedianPrice: string;
  LowestPrice: string;
  HighestPrice: string;
  Currency: string;
  StandardDeviation: string;
  Volume: string;
}

export interface PriceData {
  success: boolean;
  average_price: string;
  median_price: string;
  amount_sold: string;
  standard_deviation: string;
  lowest_price: string;
  highest_price: string;
  first_sale_date: string;
  time: string;
  currency: string;
}
